{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","LiveChat/LoginForm/LoginForm.jsx"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","__webpack_require__","d","__webpack_exports__","validEmail","email","test","String","toLowerCase","ContactForm","state","isFormValid","booking","type","name","placeholder","errorMessage","valid","dirty","onChangeHandler","e","str","_e$target","nextState","_home_atlana_WebstormProjects_LiveChat_2_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_this","match","setState","onBlurHandler","onFocusHandler","submitHandler","preventDefault","visitorAuth","console","log","createPostBody","postChatRequest","then","r","postVisitorAuthRequest","JSON","stringify","props","isAgentOnline","showChat","showFormOffline","fromDocumentation","request","skill","interactionTimeout","userAgent","window","navigator","language","languages","userLanguage","_this$state","this","survey","preChatSurvey","fieldData","questions","question","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","dangerouslySetInnerHTML","__html","header","onSubmit","style","order","label","onChange","onBlur","onFocus","checkValidity","entry","displayValue","onClick","onSubmitForm","disabled","Component"],"mappings":"yFAAe,SAAAA,EAAAC,EAAAC,EAAAC,GAYf,OAXAD,KAAAD,EACAG,OAAAC,eAAAJ,EAAAC,EAAA,CACAC,QACAG,YAAA,EACAC,cAAA,EACAC,UAAA,IAGAP,EAAAC,GAAAC,EAGAF,ECXe,SAAAQ,EAAAC,GACf,QAAAC,EAAA,EAAiBA,EAAAC,UAAAC,OAAsBF,IAAA,CACvC,IAAAG,EAAA,MAAAF,UAAAD,GAAAC,UAAAD,GAAA,GACAI,EAAAX,OAAAY,KAAAF,GAEA,oBAAAV,OAAAa,wBACAF,IAAAG,OAAAd,OAAAa,sBAAAH,GAAAK,OAAA,SAAAC,GACA,OAAAhB,OAAAiB,yBAAAP,EAAAM,GAAAd,eAIAS,EAAAO,QAAA,SAAApB,GACMF,EAAcU,EAAAR,EAAAY,EAAAZ,MAIpB,OAAAQ,EAjBAa,EAAAC,EAAAC,EAAA,sBAAAhB,+ICIA,SAASiB,EAAWC,GAElB,MADW,wJACDC,KAAKC,OAAOF,GAAOG,mBAMzBC,6MACJC,MAAQ,CACNC,aAAa,EACbC,QAAS,GACTP,MAAO,CACLxB,MAAO,GACPgC,KAAM,QACNC,KAAM,QACNC,YAAa,kBACbC,aAAc,sDACdC,OAAO,EACPC,OAAO,GAETJ,KAAM,CACJjC,MAAO,GACPgC,KAAM,OACNC,KAAM,OACNC,YAAa,kBACbC,aAAc,8BACdC,OAAO,EACPC,OAAO,MAIXC,gBAAkB,SAAAC,GAAK,IA5BNC,EA4BMC,EACGF,EAAEhC,OAAlBP,EADayC,EACbzC,MAAOiC,EADMQ,EACNR,KACTS,EAASzC,OAAA0C,EAAA,EAAA1C,CAAA,GAAQ2C,EAAKf,OAE5B,OAAQI,GACN,IAAK,QACHS,EAAUlB,MAAMY,MAAQb,EAAWvB,GACnC0C,EAAUlB,MAAMa,MAAkB,KAAVrC,GAAwBuB,EAAWvB,GAC3D0C,EAAUlB,MAAMxB,MAAQA,EACxB,MACF,IAAK,OACH0C,EAAUT,KAAKG,QAvCJI,EAuCsBxC,GAtC3B6C,MAAM,iBAAmBL,EAAIK,MAAM,UAuCzCH,EAAUT,KAAKI,OAAQ,EACvBK,EAAUT,KAAKjC,MAAQA,EACvB,MACF,IAAK,SACH0C,EAAUX,QAAU/B,EAOK,KAAzB0C,EAAUT,KAAKjC,OAAsC,KAAtB0C,EAAUX,QAC3CW,EAAUZ,YAAcY,EAAUlB,MAAMY,OAASM,EAAUT,KAAKG,MAEhEM,EAAUZ,aAAc,EAG1Bc,EAAKE,SAAS,kBAAMJ,OAGtBK,cAAgB,SAAAR,GACd,IAAMG,EAASzC,OAAA0C,EAAA,EAAA1C,CAAA,GAAQ2C,EAAKf,OAC5Ba,EAAUlB,MAAMa,MAAmC,KAAnBE,EAAEhC,OAAOP,MACzC4C,EAAKE,SAAS,kBAAMJ,OAGtBM,eAAiB,SAAAT,GACf,IAAMG,EAASzC,OAAA0C,EAAA,EAAA1C,CAAA,GAAQ2C,EAAKf,OAC5Ba,EAAUlB,MAAMa,OAAQ,EACxBO,EAAKE,SAAS,kBAAMJ,OAGtBO,cAAgB,SAAAV,GACdA,EAAEW,iBAEF,IAAMC,EAAc,GASpBC,QAAQC,IAAI,0BAAwBT,EAAKU,kBAEzCC,YAAgBX,EAAKU,kBAAkBE,KAAK,SAAAC,GAC1CL,QAAQC,IAAI,kCAAgCI,GAC5CC,YAAuBC,KAAKC,UAAUT,IAAcK,KAAK,SAAAC,GAAC,OACxDL,QAAQC,IAAI,kCAAgCI,OAIhDb,EAAKiB,MAAMC,cACPlB,EAAKiB,MAAME,WACXnB,EAAKiB,MAAMG,qBAIjBV,eAAiB,WAkCf,IAAMW,EAAoB,CACxBC,QAAS,CACPC,MAAO,MACPC,mBAAoB,IACpBC,UAAWC,OAAOC,UAAUF,UAkB5BG,SAAUD,UAAUE,UAChBF,UAAUE,UAAU,GACpBF,UAAUC,UAAYD,UAAUG,eAIxC,OAAOf,KAAKC,UAAUK,4EAGf,IAAAU,EAC8BC,KAAK/C,MAAlCL,EADDmD,EACCnD,MAAOS,EADR0C,EACQ1C,KAAMH,EADd6C,EACc7C,YACb+C,EAAWD,KAAKf,MAAMiB,cAAtBD,OACFE,EAAYF,EAAOG,UAAUC,SAEnC,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,eACVC,wBAAyB,CAAEC,OAAQV,EAAOW,UAG5CN,EAAAC,EAAAC,cAAA,QAAMK,SAAUb,KAAK3B,cAAeoC,UAAU,cAC5CH,EAAAC,EAAAC,cAAA,SACEC,UAAU,mBACVK,MAAO,CAAEC,MAAOZ,EAAU,GAAGY,QAE7BT,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2BACbN,EAAU,GAAGa,MADhB,KAGAV,EAAAC,EAAAC,cAAA,SACEC,UAAS,2BAAAtE,QAA8BkB,EAAKG,OAC1CH,EAAKI,OACL,kCACFL,KAAMC,EAAKD,KACXhC,MAAOiC,EAAKjC,MACZiC,KAAMA,EAAKA,KACXC,YAAaD,EAAKC,YAClB2D,SAAUjB,KAAKtC,mBAEfL,EAAKG,OAASH,EAAKI,OACnB6C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kCACbpD,EAAKE,eAKZ+C,EAAAC,EAAAC,cAAA,SACEC,UAAU,mBACVK,MAAO,CAAEC,MAAOZ,EAAU,GAAGY,QAE7BT,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2BACbN,EAAU,GAAGa,MADhB,KAGAV,EAAAC,EAAAC,cAAA,SACEC,UAAS,2BAAAtE,QAA8BS,EAAMY,OAC3CZ,EAAMa,OACN,kCACFL,KAAMR,EAAMQ,KACZhC,MAAOwB,EAAMxB,MACbiC,KAAMT,EAAMS,KACZC,YAAaV,EAAMU,YACnB2D,SAAUjB,KAAKtC,gBACfwD,OAAQlB,KAAK7B,cACbgD,QAASnB,KAAK5B,kBAEdxB,EAAMY,OAASZ,EAAMa,OACrB6C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kCACb7D,EAAMW,eAKb+C,EAAAC,EAAAC,cAAA,SACEC,UAAU,gDACVK,MAAO,CAAEC,MAAOZ,EAAU,GAAGY,QAE7BT,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2BACbN,EAAU,GAAGa,MADhB,KAGAV,EAAAC,EAAAC,cAAA,UACEnD,KAAK,SACLjC,MAAO4E,KAAK/C,MAAME,QAClBsD,UAAU,2BACVQ,SAAUjB,KAAKtC,gBACfyD,QAASnB,KAAKoB,eAEdd,EAAAC,EAAAC,cAAA,UAAQpF,MAAM,IAAd,6BACAkF,EAAAC,EAAAC,cAAA,UAAQpF,MAAO+E,EAAU,GAAGkB,MAAM,GAAGjG,OAClC+E,EAAU,GAAGkB,MAAM,GAAGC,cAEzBhB,EAAAC,EAAAC,cAAA,UAAQpF,MAAO+E,EAAU,GAAGkB,MAAM,GAAGjG,OAClC+E,EAAU,GAAGkB,MAAM,GAAGC,cAZ3B,QAkBFhB,EAAAC,EAAAC,cAAA,UACEe,QAASvB,KAAKwB,aACdC,UAAWvE,EACXuD,UAAU,oBACVK,MAAO,CAAEC,MAAO,KAJlB,kBAxPgBW,aAsQX1E","file":"static/js/5.f7e42117.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import React, { Component } from \"react\";\nimport \"./LoginForm.sass\";\nimport { postChatRequest, postVisitorAuthRequest } from \"../API/API\";\n\nfunction validEmail(email) {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\nfunction validName(str) {\n  return !str.match(/[^\\w\\s-']/gi) && !str.match(/[^\\D]/g);\n}\n\nclass ContactForm extends Component {\n  state = {\n    isFormValid: false,\n    booking: \"\",\n    email: {\n      value: \"\",\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Enter text here\",\n      errorMessage: \"Enter a valid email address. Format: you@domain.com\",\n      valid: false,\n      dirty: false\n    },\n    name: {\n      value: \"\",\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Enter text here\",\n      errorMessage: \"Complete the required field\",\n      valid: false,\n      dirty: false\n    }\n  };\n\n  onChangeHandler = e => {\n    const { value, name } = e.target;\n    const nextState = { ...this.state };\n\n    switch (name) {\n      case \"email\":\n        nextState.email.valid = validEmail(value);\n        nextState.email.dirty = value !== \"\" && true && validEmail(value);\n        nextState.email.value = value;\n        break;\n      case \"name\":\n        nextState.name.valid = validName(value);\n        nextState.name.dirty = true;\n        nextState.name.value = value;\n        break;\n      case \"select\":\n        nextState.booking = value;\n        break;\n\n      default:\n        break;\n    }\n\n    if (nextState.name.value !== \"\" && nextState.booking !== \"\") {\n      nextState.isFormValid = nextState.email.valid && nextState.name.valid;\n    } else {\n      nextState.isFormValid = false;\n    }\n\n    this.setState(() => nextState);\n  };\n\n  onBlurHandler = e => {\n    const nextState = { ...this.state };\n    nextState.email.dirty = true && e.target.value !== \"\";\n    this.setState(() => nextState);\n  };\n\n  onFocusHandler = e => {\n    const nextState = { ...this.state };\n    nextState.email.dirty = false;\n    this.setState(() => nextState);\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n\n    const visitorAuth = {\n      //authChatConnId: 568046210,\n      //ssoKey: \"k12197\",\n      //engagementId: 4295058283\n      // LETagContextId: \"2\",\n      // LETagSessionId: \"90o5l5twRUGu1rN7bzwNMA\",\n      // LETagVisitorId: \"RiM2JlOTcwOGIxZmNiNTk4\"\n    };\n\n    console.log(\"createPostBody ---> \", this.createPostBody());\n\n    postChatRequest(this.createPostBody()).then(r => {\n      console.log(\"createPostBody_headers ---> \", r);\n      postVisitorAuthRequest(JSON.stringify(visitorAuth)).then(r =>\n        console.log(\"postVisitorAuthRequest ---> \", r)\n      );\n    });\n\n    this.props.isAgentOnline\n      ? this.props.showChat()\n      : this.props.showFormOffline();\n  };\n\n  // func to create post body for submit form\n  createPostBody = () => {\n    //const { survey } = this.props.preChatSurvey;\n\n    /*  const formData = {\n      //interactionTimeout: 40,\n      userAgent: window.navigator.userAgent,\n      // LETagVisitorId: \"QxNDcxMDNmODI0NTQyYWIw\",\n      // LETagSessionId: \"W9ogR-ocS7etQDZhSSKPkA\",\n      // LETagContextId: \"1\",\n      survey: {\n        id: survey.id,\n        question: [\n          {\n            id: survey.questions.question[0].id,\n            answer: this.state.name.value\n          },\n          {\n            id: survey.questions.question[1].id,\n            answer: this.state.email.value\n          },\n          {\n            id: survey.questions.question[2].id,\n            answer: [this.state.booking]\n          }\n        ]\n      },\n      // engagementId: 1362001414,\n      // campaignId: 1362001314,\n      language: navigator.languages\n        ? navigator.languages[0]\n        : navigator.language || navigator.userLanguage\n      //availabilityPolicy: 0,\n      //chatReferrer: \"https://www.vikingrivercruises.com/\"\n    }; */\n    const fromDocumentation = {\n      request: {\n        skill: \"All\",\n        interactionTimeout: 3000,\n        userAgent: window.navigator.userAgent,\n        // survey: {\n        //   id: survey.id,\n        //   question: [\n        //     {\n        //       id: survey.questions.question[0].id,\n        //       answer: this.state.name.value\n        //     },\n        //     {\n        //       id: survey.questions.question[1].id,\n        //       answer: this.state.email.value\n        //     },\n        //     {\n        //       id: survey.questions.question[2].id,\n        //       answer: [this.state.booking]\n        //     }\n        //   ]\n        // },\n        language: navigator.languages\n          ? navigator.languages[0]\n          : navigator.language || navigator.userLanguage\n      }\n    };\n\n    return JSON.stringify(fromDocumentation);\n  };\n\n  render() {\n    const { email, name, isFormValid } = this.state;\n    const { survey } = this.props.preChatSurvey;\n    const fieldData = survey.questions.question;\n\n    return (\n      <div className=\"login-window\">\n        <div\n          className=\"welcome-text\"\n          dangerouslySetInnerHTML={{ __html: survey.header }}\n        />\n\n        <form onSubmit={this.submitHandler} className=\"login-form\">\n          <label\n            className=\"login-form-block\"\n            style={{ order: fieldData[0].order }}\n          >\n            <span className=\"login-form-block__label\">\n              {fieldData[0].label}*\n            </span>\n            <input\n              className={`login-form-block__input ${!name.valid &&\n                name.dirty &&\n                \"login-form-block__input__error\"}`}\n              type={name.type}\n              value={name.value}\n              name={name.name}\n              placeholder={name.placeholder}\n              onChange={this.onChangeHandler}\n            />\n            {!name.valid && name.dirty && (\n              <span className=\"login-form-block__errorMessage\">\n                {name.errorMessage}\n              </span>\n            )}\n          </label>\n\n          <label\n            className=\"login-form-block\"\n            style={{ order: fieldData[1].order }}\n          >\n            <span className=\"login-form-block__label\">\n              {fieldData[1].label}*\n            </span>\n            <input\n              className={`login-form-block__input ${!email.valid &&\n                email.dirty &&\n                \"login-form-block__input__error\"}`}\n              type={email.type}\n              value={email.value}\n              name={email.name}\n              placeholder={email.placeholder}\n              onChange={this.onChangeHandler}\n              onBlur={this.onBlurHandler}\n              onFocus={this.onFocusHandler}\n            />\n            {!email.valid && email.dirty && (\n              <span className=\"login-form-block__errorMessage\">\n                {email.errorMessage}\n              </span>\n            )}\n          </label>\n\n          <label\n            className=\"login-form-block login-form-block__pseudoElem\"\n            style={{ order: fieldData[2].order }}\n          >\n            <span className=\"login-form-block__label\">\n              {fieldData[2].label}*\n            </span>\n            <select\n              name=\"select\"\n              value={this.state.booking}\n              className=\"login-form-block__select\"\n              onChange={this.onChangeHandler}\n              onFocus={this.checkValidity}\n            >\n              <option value=\"\">Choose item from the list</option>\n              <option value={fieldData[2].entry[0].value}>\n                {fieldData[2].entry[0].displayValue}\n              </option>\n              <option value={fieldData[2].entry[1].value}>\n                {fieldData[2].entry[1].displayValue}\n              </option>\n              })}\n            </select>\n          </label>\n\n          <button\n            onClick={this.onSubmitForm}\n            disabled={!isFormValid}\n            className=\"login-form-button\"\n            style={{ order: 20 }}\n          >\n            Start\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n"],"sourceRoot":""}